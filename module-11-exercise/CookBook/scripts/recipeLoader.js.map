{"version":3,"sources":["recipeLoader.ts"],"names":["RecipeLoader","RecipeLoader.constructor","RecipeLoader.load","RecipeLoader.mapData","RecipeLoader.getFoodGroups","RecipeLoader.getExamples","RecipeLoader.getIngredients"],"mappings":"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","file":"recipeLoader.js","sourceRoot":"/home/craig/git/edX/typescript/module-11-exercise/","sourcesContent":["/// <reference path=\"typings/jquery.d.ts\" />\r\n\r\nclass RecipeLoader {\r\n    constructor(public url: string) {}\r\n\r\n    load() {\r\n        $.getJSON(this.url,(data) => {\r\n            this.mapData(data);        \r\n        });\r\n    }\r\n\r\n    mapData(data) {\r\n        if (data) {\r\n            var categories: any[] = data.recipeCategories;\r\n            //TODO\r\n            //Change RecipeCategories to use the new generic type.\r\n            //Pass IRecipeCategory as the type\r\n            recipeCategories = new RecipeCategories<IRecipeCategory>();\r\n\r\n            //TODO\r\n            //Create a new RecipeCategories object named recipeCategoriesSummary\r\n            //and pass an IRecipeCategorySummary as the generic value.\r\n            var recipeCategoriesSummary = new RecipeCategories<IRecipeCategorySummary>();\r\n\r\n            categories.forEach((category) => {\r\n                var recipeCategory = new RecipeCategory({\r\n                    name: category.title,\r\n                    foodGroups: this.getFoodGroups(category),\r\n                    description: category.details,\r\n                    examples: this.getExamples(category)\r\n                });\r\n                recipeCategories.items.push(recipeCategory);\r\n\r\n                //TODO\r\n                //Create a new RecipeCategorySummary instance and pass\r\n                //the category.title and category.details into the constructor.\r\n                //Once the class is created add it into the recipeCategoriesSummary\r\n                //object's items collection\r\n                //HINT: The constructor object passed must match the IRecipeCategorySummary interface\r\n                //HINT: Use the push() function\r\n                var recipeCategorySummary = new RecipeCategorySummary({title: category.title, text: category.details});\r\n                recipeCategoriesSummary.items.push(recipeCategorySummary);\r\n                \r\n            });\r\n            \r\n            //Render the categories into the select\r\n            renderer.renderCategories(recipeCategoriesSummary);\r\n        }\r\n        else {\r\n            renderer.renderError();\r\n        }\r\n    }\r\n\r\n    getFoodGroups(category) : FoodGroup[] {\r\n        //Map foodgroups data to TS object\r\n        return category.foodGroups.map((foodGroup) => {\r\n            var group = new FoodGroup(foodGroup.title);\r\n            return group;\r\n        });\r\n    }\r\n\r\n    getExamples(category) : IExample[] {\r\n        return category.examples.map((example) => { \r\n            return new Example({\r\n                name: example.name,\r\n                ingredients: this.getIngredients(example),\r\n                prepTime: example.prepTime\r\n            });\r\n        });\r\n    }\r\n\r\n    getIngredients(example): Ingredient[] {\r\n        return example.ingredients.map((value) => {\r\n            return new Ingredient(value);\r\n        });\r\n    }\r\n} "]}