{
  "name": "jfig",
  "version": "1.2.0",
  "description": "JSON file loader or JSON pass through",
  "main": "index.js",
  "scripts": {
    "test": "node test.js | tap-spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scottcorgan/jfig.git"
  },
  "keywords": [
    "config",
    "json",
    "loader"
  ],
  "author": {
    "name": "Scott Corgan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottcorgan/jfig/issues"
  },
  "homepage": "https://github.com/scottcorgan/jfig",
  "dependencies": {
    "amp-is-object": "^1.0.1",
    "amp-is-string": "^1.0.1",
    "clear-require": "^1.0.1",
    "join-path": "^1.0.0",
    "lodash.find": "^2.4.1"
  },
  "devDependencies": {
    "fs-extra": "^0.14.0",
    "tap-spec": "^2.1.2",
    "tape": "^3.0.3"
  },
  "readme": "# jfig\n\nJSON file loader or JSON pass through.\n\nI needed a way to not have to know if the data passed into the function was a file path or an object. If it is a filename, this module tries to load the file. If it is an object, it just returns the object.\n\n## Install\n\n```\nnpm install jfig --save\n```\n\n## Usage\n\nFile path\n\n```js\nvar jfig = require('jfig');\n\nvar something = __dirname + '/config.json';\nvar config = jfig(something);\n```\n\nObject pass through\n\n```js\nvar jfig = require('jfig');\n\nvar something = {\n  type: 'object'\n};\nvar config = jfig(something);\n```\n\n## API\n\n### jsfig(data[, options])\n\n* `data` - file path or object to parse\n* `options`\n  * `root` - the root path if a file path is provided\n  * `pluck` - a string or array of keys to plucks the values out of the config file or object\n\n## Run Test\n\n```\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "jfig@1.2.0",
  "_from": "jfig@^1.2.0"
}
