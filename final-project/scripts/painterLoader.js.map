{"version":3,"sources":["painterLoader.ts"],"names":["PainterLoader","PainterLoader.constructor","PainterLoader.load","PainterLoader.mapData"],"mappings":"AAAA,4CAA4C;AAE5C,IAAM,aAAa;IACfA,SADEA,aAAaA,CACIA,GAAWA;QAAXC,QAAGA,GAAHA,GAAGA,CAAQA;IAAGA,CAACA;IAElCD,4BAAIA,GAAJA;QAAAE,iBAYCA;QAXGA,OAAOA,CAACA,GAAGA,CAACA,6BAA6BA,CAACA,CAACA;QAC3CA,IAAAA,CAACA;YACGA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,GAAGA,EAACA,UAACA,IAAIA;gBACpBA,OAAOA,CAACA,GAAGA,CAACA,oBAAoBA,CAACA,CAACA;gBAClCA,KAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;YACvBA,CAACA,CAACA,CAACA;QACPA,CAAEA;QAAAA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;YACTA,OAAOA,CAACA,GAAGA,CAACA,6BAA6BA,CAACA,CAACA;YAC3CA,OAAOA,CAACA,GAAGA,CAACA,CAACA,CAACA,OAAOA,CAACA,CAACA;QAC3BA,CAACA;QACDA,OAAOA,CAACA,GAAGA,CAACA,6BAA6BA,CAACA,CAACA;IAC/CA,CAACA;IAEDF,+BAAOA,GAAPA,UAAQA,IAAIA;QACRG,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;YACPA,AACAA,iCADiCA;gBAC7BA,UAAUA,GAAUA,IAAIA,CAACA,cAAcA,CAACA;YAC5CA,OAAOA,CAACA,GAAGA,CAACA,aAAaA,GAAGA,UAAUA,CAACA,CAACA;YAExCA,AACAA,sCADsCA;YACtCA,cAAcA,GAAGA,IAAIA,cAAcA,CAACA,EAAEA,CAACA,CAACA;YAExCA,AAKAA,MALMA;YACNA,oEAAoEA;YACpEA,0DAA0DA;YACtEA,2FAA2FA;YAE/EA,UAAUA,CAACA,OAAOA,CAACA,UAACA,QAAQA;gBACxBA,IAAIA,cAAcA,GAAGA,IAAIA,aAAaA,CAACA;oBACnCA,IAAIA,EAAEA,QAAQA,CAACA,IAAIA;oBACnBA,KAAKA,EAAEA,QAAQA,CAACA,OAAOA,CAACA;oBACxBA,QAAQA,EAAEA,QAAQA,CAACA,QAAQA;oBAC3BA,UAAUA,EAAEA,QAAQA,CAACA,UAAUA;oBAC/BA,WAAWA,EAAEA,QAAQA,CAACA,WAAWA;oBACjCA,SAASA,EAAEA,QAAQA,CAACA,SAASA;iBAChCA,CAACA,CAACA;gBACnBA,AACgBA,4DAD4CA;gBAC5CA,cAAcA,CAACA,KAAKA,CAACA,IAAIA,CAACA,cAAcA,CAACA,CAACA;gBAE1CA,MAAMA;gBACNA,sDAAsDA;gBACtDA,+DAA+DA;gBAC/DA,mEAAmEA;gBACnEA,2BAA2BA;gBAC3BA,qFAAqFA;gBACrFA,+BAA+BA;gBAC/CA,yHAAyHA;gBACzHA,4EAA4EA;YAEhEA,CAACA,CAACA,CAACA;YACHA,OAAOA,CAACA,GAAGA,CAACA,+BAA+BA,GAAGA,cAAcA,CAACA,KAAKA,CAACA,CAACA;YAEpEA,AACAA,uCADuCA;YACvCA,QAAQA,CAACA,gBAAgBA,CAACA,cAAcA,CAACA,CAACA;QAC9CA,CAACA;QACDA,IAAIA,CAACA,CAACA;YACFA,QAAQA,CAACA,WAAWA,EAAEA,CAACA;QAC3BA,CAACA;IACLA,CAACA;IA2BLH,oBAACA;AAADA,CAzFA,AAyFCA,IAAA","file":"painterLoader.js","sourceRoot":"/home/craig/git/edX/typescript/final-project/","sourcesContent":["/// <reference path=\"typings/jquery.d.ts\" />\r\n\r\nclass PainterLoader {\r\n    constructor(public url: string) {}\r\n\r\n    load() {\r\n        console.log(\"PainterLoader.load() called\");\r\n        try {\r\n            $.getJSON(this.url,(data) => {\r\n                console.log(\"$.getJSON() called\");\r\n                this.mapData(data);        \r\n            });\r\n        } catch (e) {\r\n            console.log(\"Problem calling $.getJSON()\");\r\n            console.log(e.message);\r\n        }\r\n        console.log(\"End of PainterLoader.load()\");\r\n    }\r\n\r\n    mapData(data) {\r\n        if (data) {\r\n            //Put the JSON data into an array\r\n            var categories: any[] = data.famousPainters;\r\n            console.log(\"JSON data: \" + categories);\r\n\r\n            //instantiate the FamousPainters array\r\n            famousPainters = new FamousPainters([]);\r\n\r\n            //TODO\r\n            //Create a new RecipeCategories object named recipeCategoriesSummary\r\n            //and pass an IRecipeCategorySummary as the generic value.\r\n//            var recipeCategoriesSummary = new RecipeCategories<IRecipeCategorySummary>();\r\n\r\n            categories.forEach((category) => {\r\n                var recipeCategory = new FamousPainter({\r\n                    name: category.name,\r\n                    style: category['style'],\r\n                    examples: category.examples,\r\n                    birthplace: category.birthplace,\r\n                    nationality: category.nationality,\r\n                    birthdate: category.birthdate\r\n                });\r\n//                console.log(\"Painter: \" + recipeCategory);\r\n                famousPainters.items.push(recipeCategory);\r\n\r\n                //TODO\r\n                //Create a new RecipeCategorySummary instance and pass\r\n                //the category.title and category.details into the constructor.\r\n                //Once the class is created add it into the recipeCategoriesSummary\r\n                //object's items collection\r\n                //HINT: The constructor object passed must match the IRecipeCategorySummary interface\r\n                //HINT: Use the push() function\r\n//                var recipeCategorySummary = new RecipeCategorySummary({title: category.title, text: category.details});\r\n//                recipeCategoriesSummary.items.push(recipeCategorySummary);\r\n                \r\n            });\r\n            console.log(\"Famous Painters items array: \" + famousPainters.items);\r\n            \r\n            //Render the categories into the select\r\n            renderer.renderCategories(famousPainters);\r\n        }\r\n        else {\r\n            renderer.renderError();\r\n        }\r\n    }\r\n\r\n\r\n/*    getFoodGroups(category) : FoodGroup[] {\r\n        //Map foodgroups data to TS object\r\n        return category.foodGroups.map((foodGroup) => {\r\n            var group = new FoodGroup(foodGroup.title);\r\n            return group;\r\n        });\r\n    }\r\n\r\n    getExamples(category) : IExample[] {\r\n        return category.examples.map((example) => { \r\n            return new Example({\r\n                name: example.name,\r\n                ingredients: this.getIngredients(example),\r\n                prepTime: example.prepTime\r\n            });\r\n        });\r\n    }\r\n\r\n    getIngredients(example): Ingredient[] {\r\n        return example.ingredients.map((value) => {\r\n            return new Ingredient(value);\r\n        });\r\n    }\r\n*/\r\n} "]}